---
# Bootstrap Playbook for All Things Linux Infrastructure
# This playbook handles initial server setup and configuration

- name: "Bootstrap All Things Linux Servers"
  hosts: all
  become: true
  gather_facts: true
  vars:
    required_packages:
      - python3
      - python3-pip
      - curl
      - wget
      - git
      - htop
      - vim
      - unzip
      - fail2ban
      - ufw
      - ntp

  pre_tasks:
    - name: Display bootstrap information
      ansible.builtin.debug:
        msg: |
          Bootstrapping server: {{ inventory_hostname }}
          Server Role: {{ server_role | default('undefined') }}
          Environment: {{ environment | default('production') }}

    - name: Check if server has been bootstrapped before
      ansible.builtin.stat:
        path: /etc/atl-bootstrap-complete
      register: bootstrap_check

    - name: Set bootstrap status
      ansible.builtin.set_fact:
        is_fresh_install: "{{ not bootstrap_check.stat.exists }}"

  roles:
    # Configure base system (/etc configuration, packages, etc.)
    - role: system
      vars:
        system_packages: "{{ required_packages + (role_specific_packages | default([])) }}"
        system_timezone: "{{ organization.timezone | default('UTC') }}"
        system_locale: "{{ system.locale | default('en_US.UTF-8') }}"
        system_ssh_port: "{{ security.ssh.port | default(22) }}"
        system_ssh_max_auth_tries: "{{ security.ssh.max_auth_tries | default(3) }}"

  tasks:
    # Upgrade packages on fresh install
    - name: bootstrap | Upgrade all packages (if fresh install)
      ansible.builtin.apt:
        upgrade: safe
      when: is_fresh_install and ansible_os_family == "Debian"

    # User Management
    - name: bootstrap | Create ansible user
      ansible.builtin.user:
        name: "{{ system.ansible_user }}"
        shell: "{{ system.default_shell }}"
        groups: sudo
        append: true
        create_home: true
        state: present

    - name: bootstrap | Create atl-deploy user for deployments
      ansible.builtin.user:
        name: atl-deploy
        shell: /bin/bash
        groups: docker
        append: true
        create_home: true
        state: present
      when: "'docker' in services | default([])"

    - name: bootstrap | Set authorized keys for ansible user
      ansible.posix.authorized_key:
        user: "{{ system.ansible_user }}"
        key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
        state: present
      failed_when: false

    # Firewall Configuration
    - name: bootstrap | Configure UFW firewall
      community.general.ufw:
        state: enabled
        policy: deny
        direction: incoming

    - name: bootstrap | Allow SSH through firewall
      community.general.ufw:
        rule: allow
        port: "{{ security.ssh.port }}"
        proto: tcp

    # Service Configuration
    - name: bootstrap | Start and enable NTP
      ansible.builtin.service:
        name: ntp
        state: started
        enabled: true
      when: ansible_os_family == "Debian"

    - name: bootstrap | Start and enable fail2ban
      ansible.builtin.service:
        name: fail2ban
        state: started
        enabled: true

    # Directory Structure
    - name: Create application directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: root
        group: root
        mode: "0755"
      loop:
        - /opt/atl
        - /opt/atl/config
        - /opt/atl/logs
        - /opt/atl/backups
        - /opt/atl/scripts
        - /var/log/atl

    # Install Docker if required
    - name: Install Docker
      ansible.builtin.include_role:
        name: docker
      when: "'docker' in services | default([])"

    # Mark bootstrap as complete
    - name: Mark bootstrap as complete
      ansible.builtin.file:
        path: /etc/atl-bootstrap-complete
        state: touch
        mode: "0644"
      when: is_fresh_install

    # Final verification
    - name: Verify system is ready
      ansible.builtin.systemd:
        name: systemd
      register: system_status
      failed_when: false
      changed_when: false

    - name: Display system status
      ansible.builtin.debug:
        msg: |
          Bootstrap completed for {{ inventory_hostname }}
          System Status: {{ system_status.status.ActiveState | default('unknown') }}
          Server Role: {{ server_role | default('undefined') }}
          Services to Install: {{ services | default([]) | join(', ') }}

  handlers:
    - name: Restart ssh
      ansible.builtin.service:
        name: ssh
        state: restarted
